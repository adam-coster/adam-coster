/* ensure layer order */
@layer vars, reset, global, lists, code, post;

/* fonts */
@import url('https://fonts.googleapis.com/css2?family=Ubuntu+Mono:ital,wght@0,400;0,700;1,400;1,700&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap');

@layer vars {
	:root {
		/* Colors */
		--color-background: rgb(24, 24, 24);
		--color-text: rgb(225, 232, 208);
		--color-scrollbar: rgba(225, 232, 208, 0.5);
		--color-subtle: rgb(155, 155, 155);
		--color-header: rgb(140, 149, 241);
		--color-bad: rgb(255, 34, 104);

		--color-list-marker: var(--color-subtle);

		--color-inline-code: rgb(138, 220, 187);
		--color-background-inline-code: black;

		--color-link: rgb(57, 156, 199);
		--color-link-hover: rgb(83, 207, 207);
		--color-link-underline: var(--color-link);

		/* BASE */
		--size: 20px;
		--width-scrollbar: 0.75rem;
		--code-size: calc(var(--size) * 0.85);
		--content-max-width: 900px;
		--view-padding: calc(var(--size) * 1.5) calc(var(--size) * 2);
		--content-padding: calc(var(--size) * 0.5) calc(var(--size) * 1);
		--border-radius: calc(var(--size) * 0.5);

		/* TEXT */

		--font-family: 'Ubuntu', sans-serif;
		--font-family-code: 'Ubuntu Mono', monospace;

		--font-weight-light: 300;
		--font-weight-medium: 500;
		--font-weight-boldest: 700;

		/* INPUTS */
		--button-padding-vertical: 5px;
		--button-padding-horizontal: calc(var(--button-padding-vertical) * 2);
		--button-padding: var(--button-padding-vertical)
			var(--button-padding-horizontal);
	}
}

@layer reset {
	/* https://github.com/elad2412/the-new-css-reset */
	*:where(
			:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
		) {
		all: unset;
		display: revert;
	}

	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	a,
	button {
		cursor: revert;
	}

	ol,
	ul,
	menu {
		list-style: none;
	}

	img {
		max-width: 100%;
	}

	table {
		border-collapse: collapse;
	}

	input,
	textarea {
		-webkit-user-select: auto;
		user-select: auto;
	}

	textarea {
		white-space: revert;
	}

	meter {
		-webkit-appearance: revert;
		appearance: revert;
	}

	::placeholder {
		color: unset;
	}

	:where([hidden]) {
		display: none;
	}

	:where([contenteditable]:not([contenteditable='false'])) {
		-moz-user-modify: read-write;
		-webkit-user-modify: read-write;
		overflow-wrap: break-word;
		-webkit-line-break: after-white-space;
		line-break: after-white-space;
		-webkit-user-select: auto;
		user-select: auto;
	}

	:where([draggable='true']) {
		-webkit-user-drag: element;
	}
}

@layer global {
	html {
		font-size: var(--size);
		overflow-x: hidden;
		font-weight: 400;
	}

	body {
		margin: auto;
		max-width: var(--content-max-width);
		background-color: var(--color-background);
		color: var(--color-text);
		font-family: var(--font-family);
		overflow-wrap: break-word;
		line-height: 1.5em;
	}

	h1 {
		font-size: 2em;
	}

	h2 {
		font-size: 1.5em;
	}

	h3 {
		font-size: 1.4em;
	}

	h4 {
		font-size: 1.2em;
	}

	h5 {
		font-size: 1.1em;
	}

	h6 {
		font-size: 1em;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: var(--font-family);
		font-weight: 700;
		margin-top: calc(var(--size));
		margin-bottom: calc(var(--size) * 0.5);
		color: var(--color-header);
		line-height: 1.2em;
	}

	h3,
	h4,
	h5,
	h6 {
		font-weight: 500;
	}

	summary {
		cursor: pointer;
	}

	details[open] {
		border: 1px solid var(--color-subtle);
		border-radius: var(--border-radius);
		padding: var(--content-padding);
	}

	kbd {
		font-family: var(--font-family-code);
		font-size: var(--code-size);
		background-color: rgba(0, 0, 0, 0.6);
		color: #f5ab35;
		border: 1px solid #f5ab35;
		border-radius: 0.4em;
		padding-inline: 0.4em;
		display: inline-block;
		padding-block: 0em;
		line-height: 1;
	}

	kbd:has(kbd) {
		border: none;
		padding-inline: 0;
		box-shadow: 0 0 0 1px black;
	}

	/* https://css-tricks.com/inclusively-hidden/ */
	.sr-only:not(:focus):not(:active) {
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}

	:where(h1, h2, h3, h4, h5, h6, p, ul, ol, menu, figure, blockquote)
		+ :where(p, ul, ol, menu, figure, blockquote) {
		margin-top: 1em;
	}

	:where(p, ul, ol, menu, figure) + :where(h1, h2, h3, h4, h5, h6) {
		margin-top: 1.25em;
	}

	a {
		color: var(--color-link);
		text-decoration: none;
	}

	a:hover {
		color: var(--color-link-hover);
	}

	a:where(:focus, :focus-visible) {
		outline: 2px solid var(--color-link);
		outline-offset: 2px;
	}

	ol,
	menu,
	ul {
		list-style: none;
		/* margin-block-start: 0; */
		padding: 0;
	}

	ol,
	ul,
	menu {
		margin-left: 1em;
	}

	ol {
		list-style: outside decimal-leading-zero;
		margin-left: 1.75em;
	}

	ul,
	menu {
		list-style: outside '◈';
	}

	ul > li,
	ol > li {
		padding-left: 0.5em;
		margin-bottom: 0.25em;
	}

	.reset:where(ul, ol, menu) {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.reset > li {
		padding: 0;
		margin: 0;
	}

	::marker {
		color: var(--color-list-marker);
	}

	::-webkit-scrollbar {
		width: var(--width-scrollbar);
		height: var(--width-scrollbar);
		background-color: rgba(0, 0, 0, 0.3);
	}

	::-webkit-scrollbar-track {
		/* border: 0.1em solid var(--color-subtle); */
		box-shadow: inset 0 0 0.2rem rgba(200, 200, 200, 0.3);

		/* background-color: black; */
	}

	::-webkit-scrollbar-thumb {
		background-color: var(--color-scrollbar);
		border: 0.15rem solid black;
		border-radius: var(--width-scrollbar);
		/* box-shadow: inset 0 0 0.1em rgba(0, 0, 0, 0.5); */
		z-index: 1;
	}

	em,
	i {
		font-style: italic;
	}

	b,
	strong {
		font-weight: 700;
	}
}

@layer code {
	pre {
		tab-size: 2;
	}

	code {
		font-family: var(--font-family-code);
	}

	:not(pre) > code {
		color: var(--color-inline-code);
		padding: 0.25em 0.25em;
		margin-inline: 0.1em;
		background-color: var(--color-background-inline-code);
		box-decoration-break: clone;
		-webkit-box-decoration-break: clone;
		border-radius: 0.4em;
		outline: 0.1em solid rgb(60, 60, 60);
	}

	pre > code {
		display: block;
		border: 1px solid var(--color-text);
		margin: calc(var(--size) * 1.25) 0;
		font-size: var(--code-size);
		padding: 0.75em 0.75em;
		overflow-x: auto;
		white-space: pre;
		line-height: 1.3em;
		box-shadow: 0.25em 0.25em 0.25em black;
	}

	/*

Atom One Dark by Daniel Gamage
Original One Dark Syntax theme from https://github.com/atom/one-dark-syntax

base:    #282c34
mono-1:  #abb2bf
mono-2:  #818896
mono-3:  #5c6370
hue-1:   #56b6c2
hue-2:   #61aeee
hue-3:   #c678dd
hue-4:   #98c379
hue-5:   #e06c75
hue-5-2: #be5046
hue-6:   #d19a66
hue-6-2: #e6c07b

*/

	.hljs {
		color: #abb2bf;
		background: #1b1d23;
	}

	.hljs-comment,
	.hljs-quote {
		color: #5c6370;
		font-style: italic;
	}

	.hljs-doctag,
	.hljs-keyword,
	.hljs-formula {
		color: #c678dd;
	}

	.hljs-section,
	.hljs-name,
	.hljs-selector-tag,
	.hljs-deletion,
	.hljs-subst {
		color: #e06c75;
	}

	.hljs-literal {
		color: #56b6c2;
	}

	.hljs-string,
	.hljs-regexp,
	.hljs-addition,
	.hljs-attribute,
	.hljs-meta .hljs-string {
		color: #98c379;
	}

	.hljs-attr,
	.hljs-variable,
	.hljs-template-variable,
	.hljs-type,
	.hljs-selector-class,
	.hljs-selector-attr,
	.hljs-selector-pseudo,
	.hljs-number {
		color: #d19a66;
	}

	.hljs-symbol,
	.hljs-bullet,
	.hljs-link,
	.hljs-meta,
	.hljs-selector-id,
	.hljs-title {
		color: #61aeee;
	}

	.hljs-built_in,
	.hljs-title.class_,
	.hljs-class .hljs-title {
		color: #e6c07b;
	}

	.hljs-emphasis {
		font-style: italic;
	}

	.hljs-strong {
		font-weight: bold;
	}

	.hljs-link {
		text-decoration: underline;
	}
}

@layer post {
	article.article > .body :where(h1, h2, h3, h4, h5, h6) {
		position: relative;
	}
	article.article > .body :where(h1, h2, h3, h4, h5, h6) a {
		position: absolute;
		--width: 0.75em;
		--left: var(--width);
		top: 0;
		left: calc(var(--left) * -1.2);
		width: var(--left);
		height: var(--width);
		display: inline-block;
	}

	article.article > .body :where(h1, h2, h3, h4, h5, h6) svg {
		visibility: hidden;
	}

	article.article > .body :where(h1, h2, h3, h4, h5, h6):hover svg {
		color: var(--color-subtle);
		fill: currentColor;
		width: var(--width);
		height: var(--width);
		visibility: visible;
	}

	article.article > .body :where(h2, h3, h4, h5, h6) {
		margin-top: calc(var(--size) * 2);
	}

	article.article > .body,
	article.body {
		--blockquote-margin: calc(var(--size) * 3.5);

		counter-reset: figure;
	}

	:where(article.article > .body, article.body) :where(img, iframe) {
		max-width: 100%;
		margin: auto;
	}

	figure {
		border: 1px solid var(--color-text);
		border-radius: var(--border-radius);
		padding: calc(var(--size) * 0.5) calc(var(--size) * 1);
		text-align: center;
	}

	figcaption {
		font-size: calc(var(--size) * 0.9);
		text-align: center;
		font-style: italic;
	}

	figcaption:before {
		counter-increment: figure;
		content: 'Fig. ' counter(figure);
		font-weight: bold;
		margin-right: calc(var(--size) * 0.5);
	}

	figcaption p:first-child {
		display: inline;
	}

	/* Tables */

	table {
		margin-top: calc(var(--size) * 0.5);
		display: inline-table;
		border-spacing: 0;
		max-width: 100%;
	}
	td,
	th {
		padding: calc(var(--size) * 0.1) calc(var(--size) * 0.4);
		outline: 2px solid var(--color-background);
		border-width: 0 2px 0 0;
		border-color: currentColor;
	}

	td {
		outline: none;
		border-bottom: 3px solid var(--color-background);
		padding-top: 0;
		padding-bottom: 0;
	}

	tr:nth-child(even) {
		color: var(--color-subtle);
	}

	td:last-child,
	th:last-child {
		border-right: none;
	}

	th {
		color: var(--color-background);
		background-color: var(--color-text);
		margin: calc(var(--size) * 0.25);
	}

	/* Quotes */

	:where(article.article > .body, article.body) blockquote {
		color: var(--color-subtle);
	}

	:where(article.article > .body, article.body) blockquote p {
		margin: 0 var(--blockquote-margin);
		font-style: italic;
	}

	:where(article.article > .body, article.body)
		blockquote
		p:first-child::before {
		content: '“';
		font-family: Georgia;
		font-size: calc(var(--size) * 6);
		margin-left: calc(var(--blockquote-margin) * -1);
		margin-top: 0.25em;
		position: absolute;
		opacity: 0.5;
	}

	/* Footnotes */

	:where(article.article > .body, article.body) sup {
		--padding: calc(var(--size) * 0.2);
		padding-left: var(--padding);
		padding-right: var(--padding);
	}

	:where(article.article > .body, article.body) .footnotes {
		border-top: 1px solid var(--color-subtle);
		padding-top: calc(var(--size) * 1);
		margin-top: calc(var(--size) * 1);
	}
}

#svelte {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	padding: 1.5em;
}
